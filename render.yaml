services:
  # PostgreSQL Database
  - type: pserv
    name: supply-chain-db
    env: postgres
    databaseName: supply_chain
    user: supply_user
    password: ${DB_PASSWORD}
    ipAllowList: []

  # Backend API Serviceyyyy
  - type: web
    name: supply-chain-backend
    env: python
    rootDir: ml-service
    buildCommand: "pip install --upgrade pip setuptools wheel && pip install -r requirements.txt"
    startCommand: "gunicorn --chdir ml-service --bind 0.0.0.0:$PORT --workers 4 --worker-class gthread app:app"
    #startCommand: "gunicorn --chdir ml-service app:app --bind 0.0.0.0:$PORT --worker-class eventlet -w 1 --timeout 120"

    envVars:
      - key: PYTHON_VERSION
        value: 3.13.4
      - key: DATABASE_URL
        fromService:
          type: pserv
          name: supply-chain-db
          property: connectionString
      - key: FLASK_ENV
        value: production
      - key: JWT_SECRET_KEY
        value: "supply-chain-jwt-secret-key-2024-very-secure-and-fixed-for-production-use-only-do-not-share"
      - key: SECRET_KEY
        value: "supply-chain-secret-key-2024-very-secure-and-fixed-for-production-use-only-do-not-share"
      - key: DEBUG
        value: false
      - key: PORT
        value: 5000

  # Frontend Service
  - type: web
    name: supply-chain-frontend
    env: static
    rootDir: frontend
    buildCommand: "npm install && npm run build"
    staticPublishPath: build
    envVars:
      - key: REACT_APP_API_URL
        value: "https://supply-chain-optimization-2.onrender.com"
        #value: "http://localhost:5000"

      - key: NODE_ENV
        value: production
